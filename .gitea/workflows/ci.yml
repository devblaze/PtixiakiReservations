name: CI Pipeline for .NET

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Run Tests
        run: dotnet test PtixiakiReservations/PtixiakiReservations.Tests/PtixiakiReservations.Tests.csproj --no-restore --no-build --verbosity normal



  docker-check:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Docker version
        run: docker --version

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v2
        with:
          dockerfile: Dockerfile

      - name: Build Docker Image
        run: docker build -t myapp:ci .

      - name: Run Docker Compose
        run: docker-compose -f docker-compose.yml up -d --build

      - name: Verify containers running
        run: docker ps

      - name: Tear down containers
        run: docker-compose -f docker-compose.yml down

  # Optional: docker push stage (disabled unless configured)
  # docker-publish:
  #   runs-on: ubuntu-latest
  #   needs: docker-check
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - name: Login to DockerHub
  #       run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
  #     - name: Push image
  #       run: |
  #         docker build -t myuser/myapp:latest .
  #         docker push myuser/myapp:latest

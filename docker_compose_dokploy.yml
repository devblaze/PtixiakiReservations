services:
  ptixiakireservations:
    build:
      context: ./PtixiakiReservations
      dockerfile: Dockerfile
    container_name: ptixiaki-app-dev
    restart: unless-stopped
    depends_on:
      - elasticsearch
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=${DB_SERVER};Database=${DB_NAME};User Id=${DB_USER};Password=${DB_PASSWORD};TrustServerCertificate=True;MultipleActiveResultSets=true
      - ElasticSettings__Uri=http://elasticsearch:9200
      - ElasticSettings__DefaultIndex=events-dev
      - TZ=Europe/Athens
      - ASPNETCORE_FORWARDEDHEADERS_ENABLED=true
      - ASPNETCORE_URLS=http://+:8080
    ports:
      - "8082:8080"  # Changed from 8081 to 8082
    networks:
      - reservations-dev
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    container_name: elasticsearch-ptixiaki-dev
    restart: unless-stopped
    volumes:
      - elasticsearch-data-dev:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9201:9200"
    networks:
      - reservations-dev

  kibana:
    image: docker.elastic.co/kibana/kibana:8.15.0
    container_name: kibana-ptixiaki-dev
    restart: unless-stopped
    ports:
      - "5602:5601"
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch-ptixiaki-dev:9200
    networks:
      - reservations-dev

networks:
  reservations-dev:
    driver: bridge

volumes:
  elasticsearch-data-dev:
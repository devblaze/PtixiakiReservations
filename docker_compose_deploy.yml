services:
  ptixiakireservations1:
    image: devblaze/ptixiakireservations:latest
    container_name: ptixiaki-app1
    restart: unless-stopped
    depends_on:
      - elasticsearch
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Server=192.168.4.246;Database=ReservationProject;User Id=sa;Password=Blaze2310;TrustServerCertificate=True;MultipleActiveResultSets=true
      - ElasticSettings__Uri=http://elasticsearch:9200
      - ElasticSettings__DefaultIndex=events
      - TZ=Europe/Athens
      - ASPNETCORE_FORWARDEDHEADERS_ENABLED=true
      - ASPNETCORE_URLS=http://+:8080
    networks:
      - reservations
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "com.centurylinklabs.watchtower.depends-on=ptixiakireservations2"
      - "traefik.enable=true"
      # Update the rule to accept both hostnames
      - "traefik.http.routers.app1.rule=Host(`192.168.4.48`) || Host(`care-conscious.gl.at.ply.gg`)"
      - "traefik.http.services.app1.loadbalancer.server.port=8080"
  
  ptixiakireservations2:
    image: devblaze/ptixiakireservations:latest
    container_name: ptixiaki-app2
    restart: unless-stopped
    depends_on:
      - elasticsearch
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Server=192.168.4.246;Database=ReservationProject;User Id=sa;Password=Blaze2310;TrustServerCertificate=True;MultipleActiveResultSets=true
      - ElasticSettings__Uri=http://elasticsearch:9200
      - ElasticSettings__DefaultIndex=events
      - TZ=Europe/Athens
      - ASPNETCORE_FORWARDEDHEADERS_ENABLED=true
      - ASPNETCORE_URLS=http://+:8080
    networks:
      - reservations
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=true"
      # Update the rule to accept both hostnames
      - "traefik.http.routers.app2.rule=Host(`192.168.4.48`) || Host(`care-conscious.gl.at.ply.gg`)"
      - "traefik.http.services.app2.loadbalancer.server.port=8080"
  
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "8090:8080"
      - "36091:36091"
      - "8091:8091"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik-logs:/var/log/traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.playit.address=:36091"
      
      # Access Logs Configuration
      - "--accesslog=true"
      - "--accesslog.filepath=/var/log/traefik/access.log"
      - "--accesslog.format=json"
      - "--accesslog.bufferingsize=100"
      
      # Metrics Configuration
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.addEntryPointsLabels=true"
      - "--metrics.prometheus.addServicesLabels=true"
      - "--metrics.prometheus.entryPoint=metrics"
      - "--entrypoints.metrics.address=:8091"
      
      # Tracing Configuration
      - "--tracing=true"
      - "--tracing.serviceName=traefik"
      - "--tracing.spanNameLimit=250"
      - "--tracing.jaeger=true"
      - "--tracing.jaeger.samplingServerURL=http://jaeger:5778/sampling"
      - "--tracing.jaeger.localAgentHostPort=jaeger:6831"
      - "--tracing.jaeger.propagation=jaeger"
    networks:
      - reservations
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    container_name: elasticsearch
    restart: unless-stopped
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    networks:
      - reservations

  kibana:
    image: docker.elastic.co/kibana/kibana:8.15.0
    container_name: kibana
    restart: unless-stopped
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - reservations
  
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=300
      - WATCHTOWER_INCLUDE_STOPPED=false
      - WATCHTOWER_LABEL_ENABLE=true
      - WATCHTOWER_ROLLING_RESTART=true
      - WATCHTOWER_TIMEOUT=90s
      - TZ=Europe/Athens
    networks:
      - reservations
    command: --label-enable --cleanup --rolling-restart

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    restart: unless-stopped
    ports:
      - "16686:16686"  # Jaeger UI
      - "5778:5778"    # Sampling configuration service
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    networks:
      - reservations

networks:
  reservations:
    driver: bridge

volumes:
  elasticsearch-data:
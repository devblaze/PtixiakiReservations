@model PtixiakiReservations.Models.SubArea

@{
    ViewData["Title"] = "Create";
}

<div class="max-w-4xl mx-auto bg-white p-8 shadow-lg rounded-lg">
    <h4 class="text-xl font-semibold text-gray-700 mb-4">Create SubArea</h4>

    <div asp-validation-summary="ModelOnly" class="text-red-500 mb-4"></div>

    <form id="createSubAreaForm">
        <!-- Area Name Input -->
        <div class="mb-4">
            <label asp-for="AreaName" class="block text-sm font-medium text-gray-700 mb-1">Area Name</label>
            <input asp-for="AreaName" id="AreaName" name="AreaName" class="block w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 text-gray-700" />
        </div>

        <!-- Size Inputs -->
        <div class="mb-4 flex gap-4">
            <div>
                <label for="Rows" class="block text-sm font-medium text-gray-700">Rows</label>
                <input type="number" id="Rows" name="Rows" class="block w-full px-3 py-2 border rounded-md" min="1" value="1" />
            </div>
            <div>
                <label for="Columns" class="block text-sm font-medium text-gray-700">Columns</label>
                <input type="number" id="Columns" name="Columns" class="block w-full px-3 py-2 border rounded-md" min="1" value="1" />
            </div>
        </div>

        <!-- Create Button -->
        <div class="mt-6">
            <button type="submit"
                    class="px-6 py-2 bg-blue-600 text-white text-sm font-medium rounded-md shadow hover:bg-blue-700 focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                Create SubArea
            </button>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        document.getElementById("createSubAreaForm").addEventListener("submit", async (e) => {
            e.preventDefault();

            const areaName = document.getElementById("AreaName").value;
            const rows = document.getElementById("Rows").value;
            const columns = document.getElementById("Columns").value;

            const subAreaData = [
                {
                    areaName: areaName,
                    rows: parseInt(rows),
                    columns: parseInt(columns)
                }
            ];

            try {
                const response = await fetch('@Url.Action("Create", "SubAreas")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(subAreaData)
                });

                if (response.ok) {
                    // Redirect to index after successful creation
                    window.location.href = '@Url.Action("Index", "SubAreas")';
                } else {
                    // Handle failure
                    alert("Error creating SubArea");
                }
            } catch (error) {
                alert("An unexpected error occurred.");
                console.error("Error:", error);
            }
});
    </script>
}
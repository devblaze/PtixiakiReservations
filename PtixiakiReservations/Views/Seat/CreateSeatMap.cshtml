@model PtixiakiReservations.Models.Seat

@{
ViewData["Title"] = "Create Seat Map";
}
@{
int subAreaId = (int)ViewData["SubAreaId"];
bool existingSeats = (bool)ViewData["HasExistingSeats"];
ViewData["Title"] = existingSeats ? "Edit Seat Map" : "Create Seat Map";
}

<h1 class="text-2xl font-bold text-gray-800 mb-6">@ViewData["Title"]</h1>

<div class="grid grid-cols-1 sm:grid-cols-3 gap-6">
    <!-- Form Section -->
    <div class="sm:col-span-1 bg-white shadow-md rounded-md p-6 space-y-4">
        <div asp-validation-summary="ModelOnly" class="text-red-600 text-sm"></div>

        <div class="form-group mb-4">
            <label for="Row" class="block text-sm font-medium text-gray-700 mb-2">Create Rows</label>
            <input type="number" value="0"
                   class="form-control border rounded-md p-2 w-full focus:ring-blue-500 focus:border-blue-500"
                   id="Row"/>
        </div>

        <div class="form-group mb-4">
            <label for="Col" class="block text-sm font-medium text-gray-700 mb-2">Create Columns</label>
            <input type="number" value="0"
                   class="form-control border rounded-md p-2 w-full focus:ring-blue-500 focus:border-blue-500"
                   id="Col"/>
        </div>

        <!-- Buttons -->
        <div class="flex space-x-3">
            <button type="button" id="create" class="btn bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-md">
                Create
            </button>
            <button type="button" id="save" class="btn bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-md">
                Save
            </button>
            <button type="button" id="deleteSeat"
                    class="btn bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-md">Delete Seat
            </button>
        </div>
    </div>

    <!-- Canvas Section -->
    <div class="sm:col-span-2 flex items-center justify-center">
        <canvas id="c" width="600" height="600" class="border border-gray-300 rounded-md shadow-md"></canvas>
    </div>
</div>

@section Scripts {
<script>
    $(document).ready(function () {
        var canvas = new fabric.Canvas('c');
        const INITIAL_POSITION_X = 50, INITIAL_POSITION_Y = 50;
        var subAreaId = @subAreaId;

        function loadExistingSeats() {
            $.getJSON('/Seat/get_data', { SubAreaId: subAreaId })
                .done(function (data) {
                    if (data && data.length > 0) {
                        console.log("Loading existing seats:", data);
                        canvas.clear();
                        data.forEach(function (seat) {
                            // Create rectangle
                            var rect = new fabric.Rect({
                                width: 50,
                                height: 50,
                                fill: '#666',
                                originX: 'center',
                                originY: 'center'
                            });

                            // Create text for the seat name
                            var text = new fabric.Text(seat.name, {
                                fontSize: 14,
                                fill: '#fff',
                                originX: 'center',
                                originY: 'center'
                            });

                            // Group the rectangle and text, and set position
                            var seatGroup = new fabric.Group([rect, text], {
                                left: seat.x,
                                top: seat.y,
                                selectable: true,
                                originX: 'center',
                                originY: 'center'
                            });

                            canvas.add(seatGroup);
                        });
                        canvas.renderAll();
                    }
                })
                .fail(function (error) {
                    console.error("Failed to fetch seats:", error);
                });
        }

        // Load seats if exists
        if (@existingSeats.ToString().ToLower()) {
            loadExistingSeats();
        }

        $("#create").click(function () {
            var rows = parseInt($("#Row").val());
            var cols = parseInt($("#Col").val());
            if (rows > 0 && cols > 0) {
                canvas.clear();
                var nextX = INITIAL_POSITION_X;
                var nextY = INITIAL_POSITION_Y;
                for (let r = 0; r < rows; r++) {
                    nextY = INITIAL_POSITION_Y + r * (50 + 30);
                    for (let c = 0; c < cols; c++) {
                        var name = `Row:${r + 1}-Col:${c + 1}`;
                        var rect = new fabric.Rect({
                            width: 50,
                            height: 50,
                            fill: '#666',
                            originX: 'center',
                            originY: 'center'
                        });

                        var text = new fabric.Text(name, {
                            fontSize: 14,
                            fill: '#fff',
                            originX: 'center',
                            originY: 'center'
                        });

                        var seatGroup = new fabric.Group([rect, text], {
                            left: nextX + c * (50 + 30),
                            top: nextY,
                            selectable: true,
                            originX: 'center',
                            originY: 'center'
                        });

                        canvas.add(seatGroup);
                    }
                }
                canvas.renderAll();
            }
        });

        $("#deleteSeat").click(function () {
            var activeObjects = canvas.getActiveObjects();
            if (activeObjects.length > 0) {
                if (confirm("Are you sure you want to remove the selected seats?")) {
                    var seatNames = activeObjects.map(obj => obj.item(1).text); // Assuming the second item is text with Seat Name 
                    $.ajax({
                        url: '/Seat/DeleteMultipleSeats',
                        type: 'POST',
                        contentType: "application/json",
                        data: JSON.stringify({seatNames: seatNames, subAreaId: subAreaId}),
                        success: function (response) {
                            if (response.success) {
                                activeObjects.forEach(obj => canvas.remove(obj));
                                canvas.discardActiveObject().renderAll();
                                alert("Selected seats deleted successfully!");
                            } else {
                                alert("Failed to delete some seats: " + response.message);
                            }
                        },
                        error: function (err) {
                            console.error(err);
                            alert("Error occurred while deleting seats.");
                        }
                    });
                }
            } else {
                alert("Please select one or more seats first!");
            }
        });

        $("#save").click(function() {
            // Get all objects from the canvas
            const seatGroups = canvas.getObjects();
            const seatsToSave = [];

            // Loop through each seat group and extract coordinates
            seatGroups.forEach(seatGroup => {
                // Extract needed values 
                const seatName = seatGroup.item(1).text;
                const x = seatGroup.left;
                const y = seatGroup.top;

                // Add to the list to save
                seatsToSave.push({
                    Name: seatName,
                    left: x,
                    top: y
                });
            });

            console.log("Saving seats with positions:", seatsToSave);

            // Send the data to the server
            $.ajax({
                url: `/Seat/CreateTableMap?subAreaId=${subAreaId}`,
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify(seatsToSave),
                success: function(response) {
                    alert("Seats saved successfully!");
                },
                error: function(error) {
                    console.error(error);
                    alert("Error occurred while saving seats.");
                }
            });
        });
    });
</script>
}
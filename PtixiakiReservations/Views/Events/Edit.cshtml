@model PtixiakiReservations.Models.Event

@{
    ViewData["Title"] = "Edit Event";
}

<div class="bg-gradient-to-r from-blue-50 to-indigo-50 min-h-screen py-8 px-4 sm:px-6 lg:px-8">
    <div class="max-w-4xl mx-auto">
        <!-- Header -->
        <div class="bg-white rounded-xl shadow-md overflow-hidden mb-8">
            <div class="bg-gradient-to-r from-blue-600 to-indigo-600 px-6 py-8">
                <h1 class="text-2xl md:text-3xl font-bold text-white">Edit Event</h1>
                <p class="mt-2 text-indigo-100 max-w-3xl">
                    Update event details and scheduling information
                </p>
            </div>
        </div>

        <!-- Alert Messages -->
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="mb-6 p-4 bg-red-100 border-l-4 border-red-500 rounded-md">
                <div class="flex">
                    <div class="flex-shrink-0">
                        <svg class="h-5 w-5 text-red-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
                        </svg>
                    </div>
                    <div class="ml-3">
                        <p class="text-sm text-red-700">@TempData["ErrorMessage"]</p>
                    </div>
                </div>
            </div>
        }

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="mb-6 p-4 bg-green-100 border-l-4 border-green-500 rounded-md">
                <div class="flex">
                    <div class="flex-shrink-0">
                        <svg class="h-5 w-5 text-green-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                        </svg>
                    </div>
                    <div class="ml-3">
                        <p class="text-sm text-green-700">@TempData["SuccessMessage"]</p>
                    </div>
                </div>
            </div>
        }

        <!-- Form Card -->
        <div class="bg-white rounded-xl shadow-lg overflow-hidden">
            <div class="p-6">
                <form method="post" id="editEventForm">
                    @Html.AntiForgeryToken()
                    <input type="hidden" asp-for="Id" />
                    <div class="space-y-6">
                        <!-- Event Type Selection Section -->
                        <div class="bg-gray-50 rounded-lg p-4 border border-gray-200">
                            <div class="flex items-center mb-4">
                                <div class="h-10 w-10 rounded-md bg-indigo-100 flex items-center justify-center text-indigo-600">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
                                    </svg>
                                </div>
                                <h2 class="ml-3 text-lg font-medium text-gray-800">Event Information</h2>
                            </div>

                            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                <!-- Event Name -->
                                <div>
                                    <label asp-for="Name" class="block text-sm font-medium text-gray-700 mb-1">Event Name</label>
                                    <div class="relative">
                                        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z"/>
                                            </svg>
                                        </div>
                                        <input asp-for="Name" placeholder="Enter event name" class="pl-10 w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-colors"/>
                                    </div>
                                    <span asp-validation-for="Name" class="text-red-500 text-xs mt-1"></span>
                                </div>

                                <!-- Event Type Dropdown -->
                                <div>
                                    <label asp-for="EventTypeId" class="block text-sm font-medium text-gray-700 mb-1">Event Type</label>
                                    <div class="relative">
                                        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"/>
                                            </svg>
                                        </div>
                                        <select asp-for="EventTypeId" asp-items="ViewBag.EventTypeList"
                                                class="pl-10 w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-colors">
                                        </select>
                                    </div>
                                    <span asp-validation-for="EventTypeId" class="text-red-500 text-xs mt-1"></span>
                                </div>
                            </div>
                        </div>

                        <!-- Schedule Section -->
                        <div class="bg-gray-50 rounded-lg p-4 border border-gray-200">
                            <div class="flex items-center mb-4">
                                <div class="h-10 w-10 rounded-md bg-indigo-100 flex items-center justify-center text-indigo-600">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                                    </svg>
                                </div>
                                <h2 class="ml-3 text-lg font-medium text-gray-800">Event Schedule</h2>
                            </div>

                            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                <div>
                                    <label asp-for="StartDateTime" class="block text-sm font-medium text-gray-700 mb-1">
                                        Start Date & Time
                                    </label>
                                    <div class="relative">
                                        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
                                            </svg>
                                        </div>
                                        <input asp-for="StartDateTime" type="datetime-local" class="pl-10 w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-colors" value="@Model.StartDateTime.ToString("yyyy-MM-ddTHH:mm")"/>
                                    </div>
                                    <span asp-validation-for="StartDateTime" class="text-red-500 text-xs mt-1"></span>
                                </div>

                                <div>
                                    <label asp-for="EndTime" class="block text-sm font-medium text-gray-700 mb-1">
                                        End Date & Time
                                    </label>
                                    <div class="relative">
                                        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
                                            </svg>
                                        </div>
                                        <input asp-for="EndTime" type="datetime-local" class="pl-10 w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-colors" value="@Model.EndTime.ToString("yyyy-MM-ddTHH:mm")"/>
                                    </div>
                                    <span asp-validation-for="EndTime" class="text-red-500 text-xs mt-1"></span>
                                </div>
                            </div>
                        </div>

                        <!-- Venue and Sub Area Section -->
                        <div class="bg-gray-50 rounded-lg p-4 border border-gray-200">
                            <div class="flex items-center mb-4">
                                <div class="h-10 w-10 rounded-md bg-indigo-100 flex items-center justify-center text-indigo-600">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" />
                                    </svg>
                                </div>
                                <h2 class="ml-3 text-lg font-medium text-gray-800">Location</h2>
                            </div>

                            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                <!-- Venue Selection -->
                                <div>
                                    <label asp-for="VenueId" class="block text-sm font-medium text-gray-700 mb-1">Venue</label>
                                    <div class="relative">
                                        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                                            </svg>
                                        </div>
                                        <select asp-for="VenueId" asp-items="ViewBag.VenueList"
                                                class="pl-10 w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-colors appearance-none bg-white">
                                            <option value="">Select a venue</option>
                                        </select>
                                        <div class="absolute inset-y-0 right-0 flex items-center px-2 pointer-events-none">
                                            <svg class="h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                                <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
                                            </svg>
                                        </div>
                                    </div>
                                    <span asp-validation-for="VenueId" class="text-red-500 text-xs mt-1"></span>
                                </div>

                                <!-- Sub Area Selection -->
                                <div>
                                    <label asp-for="SubAreaId" class="block text-sm font-medium text-gray-700 mb-1">Sub Area (Optional)</label>
                                    <div class="relative">
                                        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-.553-.894L15 4m0 13V4m0 0L9 7" />
                                            </svg>
                                        </div>
                                        <select asp-for="SubAreaId" asp-items="ViewBag.SubAreaList" id="SubAreaId"
                                                class="pl-10 w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-colors appearance-none bg-white">
                                            <option value="">Select a sub area (optional)</option>
                                        </select>
                                        <div class="absolute inset-y-0 right-0 flex items-center px-2 pointer-events-none">
                                            <svg class="h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                                <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
                                            </svg>
                                        </div>
                                    </div>
                                    <span asp-validation-for="SubAreaId" class="text-red-500 text-xs mt-1"></span>
                                </div>
                            </div>
                        </div>

                        <!-- Submit Buttons -->
                        <div class="flex justify-end space-x-3 pt-5 border-t border-gray-200">
                            <a href="@Url.Action("VenueEvents", "Events", new { venueId = Model.VenueId })"
                               class="px-4 py-2 bg-white border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 shadow-sm">
                                Cancel
                            </a>
                            <button type="submit"
                                    class="px-6 py-2 bg-gradient-to-r from-blue-600 to-indigo-600 text-white text-sm font-medium rounded-md shadow hover:from-blue-700 hover:to-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transform transition hover:-translate-y-0.5">
                                <svg xmlns="http://www.w3.org/2000/svg" class="inline-block h-5 w-5 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-3m-1 4l-3 3m0 0l-3-3m3 3V4"/>
                                </svg>
                                Save Changes
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const venueSelect = document.getElementById('VenueId');
            const subAreaSelect = document.getElementById('SubAreaId');
            
            // Load sub areas when venue changes
            venueSelect.addEventListener('change', function() {
                // Clear current options
                subAreaSelect.innerHTML = '<option value="">Select a sub area (optional)</option>';
                
                const venueId = this.value;
                if (!venueId) return;
                
                // Show loading state
                subAreaSelect.disabled = true;
                subAreaSelect.innerHTML = '<option value="">Loading sub areas...</option>';
                
                // Fetch sub areas for the selected venue
                fetch(`/Events/GetSubAreas?venueId=${venueId}`)
                    .then(response => response.json())
                    .then(data => {
                        // Reset select
                        subAreaSelect.innerHTML = '<option value="">Select a sub area (optional)</option>';
                        
                        // Add options for each sub area
                        data.forEach(subArea => {
                            const option = document.createElement('option');
                            option.value = subArea.id;
                            option.textContent = subArea.areaName;
                            subAreaSelect.appendChild(option);
                        });
                        
                        // Enable select
                        subAreaSelect.disabled = false;
                    })
                    .catch(error => {
                        console.error('Error fetching sub areas:', error);
                        subAreaSelect.innerHTML = '<option value="">Error loading sub areas</option>';
                        subAreaSelect.disabled = false;
                    });
            });
            
            // Trigger change event on page load if venue is already selected
            if (venueSelect.value) {
                // We want to preserve the currently selected sub area
                const currentSubAreaId = subAreaSelect.value;
                
                // Clear the current options
                const defaultOption = subAreaSelect.querySelector('option[value=""]');
                subAreaSelect.innerHTML = '';
                if (defaultOption) {
                    subAreaSelect.appendChild(defaultOption);
                }
                
                // Get sub areas for the selected venue
                fetch(`/Events/GetSubAreas?venueId=${venueSelect.value}`)
                    .then(response => response.json())
                    .then(data => {
                        data.forEach(subArea => {
                            const option = document.createElement('option');
                            option.value = subArea.id;
                            option.textContent = subArea.areaName;
                            
                            // If this was the previously selected option, mark it as selected
                            if (currentSubAreaId && subArea.id.toString() === currentSubAreaId) {
                                option.selected = true;
                            }
                            
                            subAreaSelect.appendChild(option);
                        });
                    })
                    .catch(error => {
                        console.error('Error fetching sub areas on page load:', error);
                    });
            }
        });
    </script>
}
@model PtixiakiReservations.Models.ViewModels.ProfileViewModel
@{
    ViewData["Title"] = "Your Profile";
}

<div class="max-w-4xl mx-auto bg-white dark:bg-gray-800 shadow-md rounded-lg overflow-hidden">
    <!-- Profile Header -->
    <div class="flex items-center justify-between p-6 bg-gray-50 dark:bg-gray-700 border-b border-gray-200 dark:border-gray-600">
        <div class="flex items-center">
            <div class="h-20 w-20 rounded-full bg-gradient-to-r from-blue-500 to-indigo-600 flex items-center justify-center text-white text-3xl font-bold">
                @(Model.User.FirstName?[0].ToString().ToUpper() ?? Model.User.Email[0].ToString().ToUpper())@(Model.User.LastName?[0].ToString().ToUpper() ?? "")
            </div>
            <div class="ml-6">
                <h1 class="text-2xl font-bold text-gray-800 dark:text-white">
                    @(string.IsNullOrEmpty(Model.User.FirstName) ? Model.User.Email : $"{Model.User.FirstName} {Model.User.LastName}")
                </h1>
                <p class="text-sm text-gray-600 dark:text-gray-300">@Model.User.Email</p>
                <div class="mt-1 flex">
                    @foreach (var role in Model.Roles)
                    {
                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200 mr-2">
                            @role
                        </span>
                    }
                </div>
            </div>
        </div>

        <a href="@Url.Action("Edit", "Profile")"
           class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2">
            Edit Profile
        </a>
    </div>

    <!-- Profile Information -->
    <div class="p-6">
        <h2 class="text-xl font-semibold text-gray-800 dark:text-white mb-4">Personal Information</h2>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
                <p class="text-sm font-medium text-gray-500 dark:text-gray-400">First Name</p>
                <p class="mt-1 text-gray-800 dark:text-white">@(Model.User.FirstName ?? "Not provided")</p>
            </div>

            <div>
                <p class="text-sm font-medium text-gray-500 dark:text-gray-400">Last Name</p>
                <p class="mt-1 text-gray-800 dark:text-white">@(Model.User.LastName ?? "Not provided")</p>
            </div>

            <div>
                <p class="text-sm font-medium text-gray-500 dark:text-gray-400">Email Address</p>
                <p class="mt-1 text-gray-800 dark:text-white">@Model.User.Email</p>
            </div>

            <div>
                <p class="text-sm font-medium text-gray-500 dark:text-gray-400">Phone Number</p>
                <p class="mt-1 text-gray-800 dark:text-white">@(Model.User.PhoneNumber ?? "Not provided")</p>
            </div>
        </div>

        <h2 class="text-xl font-semibold text-gray-800 dark:text-white mt-6 mb-4">Location Information</h2>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
                <p class="text-sm font-medium text-gray-500 dark:text-gray-400">City</p>
                <p class="mt-1 text-gray-800 dark:text-white">@(Model.User.City?.Name ?? "Not provided")</p>
            </div>

            <div>
                <p class="text-sm font-medium text-gray-500 dark:text-gray-400">Postal Code</p>
                <p class="mt-1 text-gray-800 dark:text-white">@(Model.User.PostalCode ?? "Not provided")</p>
            </div>

            <div class="md:col-span-2">
                <p class="text-sm font-medium text-gray-500 dark:text-gray-400">Address</p>
                <p class="mt-1 text-gray-800 dark:text-white">@(Model.User.Address ?? "Not provided")</p>
            </div>
        </div>
    </div>

    <!-- Recent Reservations -->
    <div class="border-t border-gray-200 dark:border-gray-600 p-6">
        <div class="flex justify-between items-center mb-4">
            <h2 class="text-xl font-semibold text-gray-800 dark:text-white">Recent Reservations</h2>
            <a href="@Url.Action("Reservations", "Profile")" class="text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300">
                View All
            </a>
        </div>

        @if (Model.RecentReservations != null && Model.RecentReservations.Any())
        {
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
                    <thead class="bg-gray-50 dark:bg-gray-800">
                    <tr>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">
                            Event
                        </th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">
                            Venue
                        </th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">
                            Seat
                        </th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">
                            Date
                        </th>
                    </tr>
                    </thead>
                    <tbody class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
                    @foreach (var reservation in Model.RecentReservations)
                    {
                        <tr>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="text-sm font-medium text-gray-900 dark:text-white">
                                    @reservation.Event.Name
                                </div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="text-sm text-gray-500 dark:text-gray-400">
                                    @reservation.Seat.SubArea.Venue.Name
                                </div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="text-sm text-gray-500 dark:text-gray-400">
                                    @reservation.Seat.SubArea.AreaName - @reservation.Seat.Name
                                </div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="text-sm text-gray-500 dark:text-gray-400">
                                    @reservation.Date.ToString("MMM dd, yyyy h:mm tt")
                                </div>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-8">
                <p class="text-gray-500 dark:text-gray-400">You don't have any reservations yet.</p>
                <a href="@Url.Action("EventsForToday", "Events")" class="mt-4 inline-block px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition duration-200">
                    Browse Events
                </a>
            </div>
        }
    </div>
@if (User.IsInRole("VenueManager"))
{
    <div class="mt-6 p-4 bg-green-50 dark:bg-green-900 rounded-lg">
        <div class="flex items-center">
            <svg class="h-6 w-6 text-green-600 dark:text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
            </svg>
            <span class="ml-2 font-medium text-green-800 dark:text-green-300">You are a Venue Manager</span>
        </div>
        <p class="mt-1 text-sm text-green-700 dark:text-green-200">You can create and manage venues and events.</p>
        <a href="@Url.Action("Index", "Venues")" class="mt-2 inline-block text-sm text-green-600 dark:text-green-400 hover:underline">
            Manage Your Venues →
        </a>
    </div>
}
else if (Model.User.HasRequestedVenueManagerRole)
{
    <div class="mt-6 p-4 @(Model.User.VenueManagerRequestStatus == "Pending" ? "bg-yellow-50 dark:bg-yellow-900" : 
                          Model.User.VenueManagerRequestStatus == "Approved" ? "bg-green-50 dark:bg-green-900" : 
                          "bg-red-50 dark:bg-red-900") rounded-lg">
        <div class="flex items-center">
            @if (Model.User.VenueManagerRequestStatus == "Pending")
            {
                <svg class="h-6 w-6 text-yellow-600 dark:text-yellow-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
                <span class="ml-2 font-medium text-yellow-800 dark:text-yellow-300">Venue Manager Request Pending</span>
            }
            else if (Model.User.VenueManagerRequestStatus == "Approved")
            {
                <svg class="h-6 w-6 text-green-600 dark:text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                </svg>
                <span class="ml-2 font-medium text-green-800 dark:text-green-300">Venue Manager Request Approved</span>
            }
            else
            {
                <svg class="h-6 w-6 text-red-600 dark:text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                </svg>
                <span class="ml-2 font-medium text-red-800 dark:text-red-300">Venue Manager Request Rejected</span>
            }
        </div>
        <p class="mt-1 text-sm @(Model.User.VenueManagerRequestStatus == "Pending" ? "text-yellow-700 dark:text-yellow-200" : 
                              Model.User.VenueManagerRequestStatus == "Approved" ? "text-green-700 dark:text-green-200" : 
                              "text-red-700 dark:text-red-200")">
            @if (Model.User.VenueManagerRequestStatus == "Pending")
            {
                <span>Your request is being reviewed by administrators. Submitted on @Model.User.VenueManagerRequestDate?.ToString("MMM dd, yyyy")</span>
            }
            else if (Model.User.VenueManagerRequestStatus == "Approved")
            {
                <span>Your request has been approved. Please log out and log back in to access venue management features.</span>
            }
            else
            {
                <span>Your request was rejected. You may submit a new request after 30 days.</span>
            }
        </p>
    </div>
}
else
{
    <div class="mt-6 p-4 bg-gray-50 dark:bg-gray-700 rounded-lg">
        <h3 class="text-lg font-medium text-gray-800 dark:text-white">Become a Venue Manager</h3>
        <p class="mt-1 text-sm text-gray-600 dark:text-gray-300">
            As a venue manager, you can create and manage venues and events for users to make reservations.
        </p>
        <a href="@Url.Action("RequestVenueManager", "Profile")" 
           class="mt-3 inline-block px-4 py-2 bg-blue-600 text-white text-sm rounded-md hover:bg-blue-700 transition duration-200">
            Request Venue Manager Role
        </a>
    </div>
}
</div>